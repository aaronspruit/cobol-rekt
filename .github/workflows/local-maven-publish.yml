# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package

on:
  push

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
    - uses: actions/checkout@v4
    - name: Install curl (for nektos/act local CI testing)
      run: apt-get update && apt-get install build-essential curl pkg-config openssl -y
    - name: Download Maven
      run: |
        curl -sL https://www-eu.apache.org/dist/maven/maven-3/3.9.8/binaries/apache-maven-3.9.8-bin.zip -o maven.zip
        apt-get update
        apt-get -y install unzip
        unzip -d /usr/share maven.zip
        rm maven.zip
        ln -s /usr/share/apache-maven-3.9.8/bin/mvn /usr/bin/mvn
        echo "M2_HOME=/usr/share/apache-maven-3.9.8" | tee -a /etc/environment
    - name: Set up JDK 21
      uses: actions/setup-java@v4.2.1
      with:
        java-version: '21'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Checkout submodules
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Release
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          smojol-cli/target/smojol-cli.jar
          che-che4z-lsp-for-cobol-integration/server/dialect-idms/target/dialect-idms.jar
    # - name: Publish to GitHub Packages Apache Maven
      # run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
      # env:
        # GITHUB_TOKEN: ${{ github.token }}
